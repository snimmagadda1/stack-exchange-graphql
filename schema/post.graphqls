extend type Query {
    getPost(id: Int!): Post
    allPostsCursor(
        first: Int = 10
        after: String
        where: PostsWhere
    ): PostsCursor
}

type Post {
    id: ID!
    postType: Int
    acceptedAnswerId: Int
    parentId: Int
    score: Int
    viewCount: Int
    body: String
    creationDate: Time
    ownerUserId: Int
    lastEditorDisplayName: String
    lastActivityDate: Time
    closedDate: Time
    title: String
    tags: String
    answerCount: Int
    answers: [Post]!
    commentCount: Int
    comments: [Comment]
    contentLicense: String
}

enum PostsSortFields {
    opaqueKey
    activity
    creation
    votes
}

type PostEdge {
    cursor: String!
    node: Post!
}

type PostsCursor {
    edges: [PostEdge]!
    pageInfo: PageInfo
}

input PostsOrderBy {
    field: PostsSortFields
    order: Order
}

input PostsWhere {
    order: PostsOrderBy
}
