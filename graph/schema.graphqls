# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Query {
    getUser(id: Int!): User
    getPost(id: Int!): Post
    getPostHistory(id: Int!): PostHistory
    getBadge(id: Int!): Badge
    getComment(id: Int!): Comment
    getVote(id: Int!): Vote

    allPostsCursor(first: Int = 10, after: String): PostsCursor
}

type PageInfo {
    hasPreviousPage: Boolean!
    hasNextPage: Boolean!
    # startCursor: String
    # endCursor: String
}

type User {
    id: ID!
    reputation: String
    creationDate: Time
    displayName: String
    lastAccessDate: Time
    views: Int
    websiteUrl: String
    location: String
    aboutMe: String
    age: Int
    upVotes: Int
    downVotes: Int
    emailHash: String
    accountId: Int
    lastAccessedDate: Time
    profileImageUrl: String
}

type Post {
    id: ID!
    postType: Int
    acceptedAnswerId: Int
    parentId: Int
    score: Int
    viewCount: Int
    body: String
    creationDate: Time
    ownerUserId: Int
    lastEditorDisplayName: String
    lastActivityDate: Time
    closedDate: Time
    title: String
    tags: String
    answerCount: Int
    commentCount: Int
    contentLicense: String
}

type PostEdge {
    cursor: String!
    node: Post!
}

type PostsCursor {
    edges: [PostEdge]!
    pageInfo: PageInfo
}

type PostHistory {
    id: ID!
    postHistoryTypeId: Int
    postId: Int
    revisionGUID: String
    creationDate: Time
    userId: Int
    userDisplayName: String
    comment: String
    closeReasonTypes: Int
    postNoticeId: Int
    text: String
    contentLicense: String
}

type Badge {
    id: ID!
    userId: Int
    name: String
    date: Time
    class: Int
    badgeClass: Int
    TagBased: Int
}

type Comment {
    id: ID!
    postId: Int
    score: Int
    text: String
    creationDate: Time
    userDisplayName: String
    userId: Int
    contentLicense: String
}

type Vote {
    id: ID!
    postId: Int
    voteTypeId: Int
    userId: Int
    creationDate: Time
    bountyAmount: Int
}

scalar Time
